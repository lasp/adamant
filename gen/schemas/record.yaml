---
# This schema describes the yaml format for a packed record.
type: map
mapping:
  # A description for the packed record.
  description:
    type: str
    required: False
  # Any useful handcode to include in the .ads file can be included here.
  # You can think of this as inline Ada, which might be useful for declaring
  # custom enum types and the like.
  preamble:
    type: str
    required: False
  # Many "with" dependencies are automatically deduced and included by
  # the generator. If you want to manually add a "with" statement, you
  # can list the names of the packages here.
  with:
    seq:
      - type: str
    required: False
  # A list of the fields to be included in the packed record.
  fields:
    seq:
      - type: map
        mapping:
          # The name of the field.
          name:
            type: str
            required: True
          # A description for the field.
          description:
            type: str
            required: False
          # The type of the field.
          type:
            type: str
            required: True
          # If the field is a primitive Ada type, provide a format
          # string that describes its size in bits and its signedness when packed. ie.
          #   U2, U32, I16, F32, U16x20 etc.
          format:
            type: str
            required: False
          # Provide a default value for this field to be initialized to when
          # a record of this type is instantiated.
          default:
            type: str
            required: False
          # This field is an arrayed type and has a variable length. The current length
          # of valid data in the field is determined by the field listed here. For example
          # if another field in the record contains the usage length of this field you might
          # input the name of that length field, ie. "Length" or "Header.Secondary_Header.Length"
          # Note that variable length fields can only occur as the last field in a packed record,
          # otherwise the record will violate the "overlayable" property of all Adamant packed
          # records.
          variable_length:
            type: str
            required: False
          # If variable_length is set, this offset (either negative or positive integer) will be
          # applied to the length field to calculate the actual length of the variable field. So
          # if the length field is read as 10 and the offset is -1, then the autocode will
          # expect 9 values in the variable length field to be valid. By default, the offset is
          # set to zero if not specified.
          variable_length_offset:
            type: int
            required: False
          # There is no predefined 'Image or autocoded .Image available for this field
          # so instead just print the bytes as an array of unsigned_8 bit integers.
          byte_image:
            type: bool
            required: False
            default: False
          # There is no way to validate this field, so don't try to autocode it.
          skip_validation:
            type: bool
            required: False
            default: False
    # At least one field must be included in the record.
    range:
      min: 1
    required: True
