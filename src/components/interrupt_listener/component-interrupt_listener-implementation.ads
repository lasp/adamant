--------------------------------------------------------------------------------
-- Interrupt_Listener Component Implementation Spec
--------------------------------------------------------------------------------

-- Discriminant Type Includes:
with System;
with Ada.Interrupts;

-- This is the Interrupt Listener component. It is attached to an interrupt and provides a connector which will give the caller a count. The count includes the number of times the interrupt has occured since the last invokation of the connector. If the count reaches the maximum of a Natural, it stops incremending. This component should be made passive in order to function properly.
generic
package Component.Interrupt_Listener.Implementation is

   -- The component class instance record:
   --
   -- Discriminant Parameters:
   -- custom_Interrupt_Procedure : Custom_Interrupt_Handler_Package.Interrupt_Procedure_Type - A custom procedure to be called within the interrupt handler. The null procedure can be used here if no specific behavior is desired.
   -- interrupt_Id : Ada.Interrupts.Interrupt_Id - Interrupt identifier number for interrupt
   -- interrupt_Priority : System.Interrupt_Priority - Interrupt priority for interrupt
   --
   type Instance (Custom_Interrupt_Procedure : Custom_Interrupt_Handler_Package.Interrupt_Procedure_Type; Interrupt_Id : Ada.Interrupts.Interrupt_ID; Interrupt_Priority : System.Interrupt_Priority) is new Interrupt_Listener.Base_Instance with private;

private

   -- The component class instance record:
   --
   -- Discriminant Parameters:
   -- custom_Interrupt_Procedure : Custom_Interrupt_Handler_Package.Interrupt_Procedure_Type - A custom procedure to be called within the interrupt handler. The null procedure can be used here if no specific behavior is desired.
   -- interrupt_Id : Ada.Interrupts.Interrupt_Id - Interrupt identifier number for interrupt
   -- interrupt_Priority : System.Interrupt_Priority - Interrupt priority for interrupt
   --
   type Instance (Custom_Interrupt_Procedure : Custom_Interrupt_Handler_Package.Interrupt_Procedure_Type; Interrupt_Id : Ada.Interrupts.Interrupt_ID; Interrupt_Priority : System.Interrupt_Priority) is new Interrupt_Listener.Base_Instance with record
      -- The internal task signal protected object.
      The_Signal : Custom_Interrupt_Handler_Package.Task_Signal (Interrupt_Priority, Interrupt_Id, Custom_Interrupt_Procedure);
   end record;

   ---------------------------------------
   -- Invokee connector primitives:
   ---------------------------------------
   -- Interrupt data generated by the custom procedure is sent back via the return type.
   overriding function Interrupt_Data_Type_Return (Self : in out Instance) return Interrupt_Data_Type;

end Component.Interrupt_Listener.Implementation;
