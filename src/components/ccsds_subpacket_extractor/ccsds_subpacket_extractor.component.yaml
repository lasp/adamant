---
description: This component extracts CCSDS formatted subpackets from a larger CCSDS formatted packet. Incoming CCSDS packets are assumed to contain smaller CCSDS subpackets in their data section. Static offsets can be provided at initialization to skip bytes at the beginning or end of the incoming packet data. A maximum number of subpackets to extract can also be provided during initialization. If extracting a subpacket fails because the subpacket length is too large, the bytes are dropped and reported as an error packet. Note that this component can receive packets either synchronously, or asynchronously and can be made either active or passive depending on the desired use case. Different use cases are presented in the Design section.
execution: either
init:
  description: The component extracts CCSDS subpackets from the data section of a larger CCSDS packet. The init function allows the component to ignore the first, start_Offset, or last, stop_Offset, number of bytes during extraction. This might be useful to ignore a leading secondary header or a trailing checksum.
  parameters:
    - name: start_Offset
      type: Natural
      default: "0"
      description: The number of bytes past the primary CCSDS header to start extracting subpackets from.
    - name: stop_Offset
      type: Natural
      default: "0"
      description: The number of bytes at the end of CCSDS packet to not attempt to extract subpackets from. This value should be used to ignore stop_Offset number of bytes at the end of a packet.
    - name: max_Subpackets_To_Extract
      type: Integer
      default: "-1"
      description: The maximum number of subpackets to attempt to extract from an incoming packet. A negative number indicates that there is no upper limit to the amount of subpackets that can be extracted. A value of zero disables any subpacketization, which might be useful to disable this component during testing.
connectors:
  - description: The synchronous ccsds packet receive connector.
    type: Ccsds_Space_Packet.T
    kind: recv_sync
  - description: The asynchronous ccsds packet receive connector.
    type: Ccsds_Space_Packet.T
    kind: recv_async
  - description: The ccsds packet send connector.
    type: Ccsds_Space_Packet.T
    kind: send
  - description: Events are sent out of this connector.
    type: Event.T
    kind: send
  - description: Error packets are sent out of this connector.
    type: Packet.T
    kind: send
  - description: The system time is retrieved via this connector.
    return_type: Sys_Time.T
    kind: get
