---
description: |
  The product database component maintains a database of data product items. Only the latest single copy of each data product item is stored, and that value can be updated or fetched by ID via connectors. The component is configured by passing the minumum and maximum data product ID that the database can accept. The component allocates memory on the heap to store a maximum sized data product for every ID in range from the minimum to maximum ID provided. Invalid IDs recieved during requests are reported as events. The lookup algorithm is extremely fast, using the data product ID iself as a direct index into the database.

  Note that IDs stored in this database should come from a compact ID space for most efficient memory usage. If you are manually setting the data product ID bases in your assembly model and creating a sparse ID set than this database component should not be used, as it could waste an enormous amount of memory. This component is designed to work best with the default, Adamant-allocated ID space for data products which spans from 1 to number of data products used in the system.
execution: passive
init:
  description: This component requires the minimum and maximum acceptable data product IDs in order to size its internal database. Memory will be allocated to store a maximum sized data product for every ID in the range provided.
  parameters:
    - name: minimum_Data_Product_Id
      type: Data_Product_Types.Data_Product_Id
      description: The minimum data product identifier that the database will accept.
    - name: maximum_Data_Product_Id
      type: Data_Product_Types.Data_Product_Id
      description: The maximum data product identifier that the database will accept. This value combined with the minimum_Data_Product_Id are used to allocate a table on the heap. Ids stored in this database should come from a compact Id space for most efficient memory usage.
    - name: send_Event_On_Missing
      type: Boolean
      default: "True"
      description: By default the product database will send an event every time a data product is fetched that is missing. Sometimes this is expected behavior and the message is annoying. This flag allows that event to be disabled permanently on startup if needed.
connectors:
  - description: Stora a data product item in the database.
    type: Data_Product.T
    kind: recv_sync
  - description: Fetch a data product item from the database.
    type: Data_Product_Fetch.T
    return_type: Data_Product_Return.T
    kind: service
  - description: Events are sent out of this connector.
    type: Event.T
    kind: send
  - description: This is the command receive connector. This does not need to be connected if the command for this component will not be used.
    type: Command.T
    kind: recv_sync
  - description: This connector is used to register and respond to the component's commands. This does not need to be connected if the command for this component will not be used.
    type: Command_Response.T
    kind: send
  - description: Data products are sent out of this connector.
    type: Data_Product.T
    kind: send
  - description: Send a packet of data - used to dump database items.
    type: Packet.T
    kind: send
  - description: The system time is retrieved via this connector.
    return_type: Sys_Time.T
    kind: get
