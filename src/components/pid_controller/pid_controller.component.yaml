---
description:

  This component is a generic component for PID control that uses proportional, integral, and derivative gains. The component input is the measured and commanded positions which is used to find an error, as well as a feed-forward value to overcome friction and jitter.
  The component uses the error with the PID gains that are set by the user in the parameter table to perform the correct control for the particular system. Any one of the gains can be set to 0 to turn off that particular term.
  The component also has the ability to limit the integral term to prevent wind-up of that term and potential kickback in the physical system. There are also optional statistics for the mean, variance, and max of the error which is disabled by setting the moving_Average_Max_Samples initialization parameter to 0.
  Lastly, the component also has the ability to produce diagnostics over a particular amount of time set by command, which contains the error and reference positions.
execution: passive
init:
  parameters:
    - name: control_Frequency
      description: The frequency in Hz at which the PID controller is being driven. This determines the time step for the PID controller to use in the algorithm.
      type: Short_Float
    - name: database_Update_Period
      type: Unsigned_16
      description: The period in which to update the data products
    - name: moving_Average_Max_Samples
      type: Natural
      description: The number of diagnostic samples to keep to perform the mean, variance, and max for the maximum duration
    - name: moving_Average_Init_Samples
      type: Integer
      description: The number of samples to initialize the object with. Must be less than the max, and is optional to set to the max with -1
      default: "-1"
connectors:
  - description: The connector for receiving the desired control location.
    type: Control_Input.U
    kind: recv_sync
  - description: The connector for sending the calculated PID controller output.
    type: Control_Output.U
    kind: send
  - description: The parameter update connector. This does not need to be connected if the parameter for this component will not be used.
    type: Parameter_Update.T
    kind: modify
  - description: Packet for sending diagnostic packets.
    type: Packet.T
    kind: send
  - description: This is the command recieve connector.
    type: Command.T
    kind: recv_sync
  - description: This connector is used to register and respond to the component's commands.
    type: Command_Response.T
    kind: send
  - description: The system time is retrieved via this connector.
    return_type: Sys_Time.T
    kind: get
  - description: The Event connector
    type: Event.T
    kind: send
  - description: The connector for data products
    type: Data_Product.T
    kind: send
